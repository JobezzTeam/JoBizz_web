{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _get from \"lodash/get\";\nimport * as React from 'react';\nimport { setDisplayName, wrapDisplayName } from 'recompose';\nimport defaultLocale from './locales/default';\nimport IntlContext from './IntlContext';\n\nvar mergeObject = function mergeObject(list) {\n  return list.reduce(function (a, b) {\n    a = _extends({}, a, {}, b);\n    return a;\n  }, {});\n};\n\nfunction withLocale(combineKeys) {\n  if (combineKeys === void 0) {\n    combineKeys = [];\n  }\n\n  return function (BaseComponent) {\n    var factory = React.createFactory(BaseComponent);\n    var WithLocale = React.forwardRef(function (props, ref) {\n      return React.createElement(IntlContext.Consumer, null, function (value) {\n        var locale = mergeObject(combineKeys.map(function (key) {\n          return _get(value || defaultLocale, \"\" + key);\n        }));\n\n        if (value && typeof value.rtl !== undefined) {\n          locale.rtl = value.rtl;\n        } else if (typeof window !== 'undefined' && (document.body.getAttribute('dir') || document.dir) === 'rtl') {\n          locale.rtl = true;\n        }\n\n        return factory(_extends({\n          ref: ref,\n          locale: locale\n        }, props));\n      });\n    });\n    WithLocale.displayName = BaseComponent.displayName;\n\n    if (process.env.NODE_ENV !== 'production') {\n      return setDisplayName(wrapDisplayName(BaseComponent, 'withLocale'))(WithLocale);\n    }\n\n    return WithLocale;\n  };\n}\n\nexport default withLocale;","map":null,"metadata":{},"sourceType":"module"}