{"ast":null,"code":"var _jsxFileName = \"/Users/chirab/Desktop/EIP_JoBizz/WebApplication/front/src/component/UserPage.js\";\nimport React, { Component, useState, useRef, useEffect } from 'react';\nimport { Map, GoogleApiWrapper, Marker, Polygon, InfoWindow } from 'google-maps-react';\nimport { usePosition } from 'use-position';\nimport GoogleMapReact from 'google-map-react';\nimport { MDBCard, MDBCardTitle, MDBCardText, MDBContainer } from \"mdbreact\";\nimport \"./Style/UserPage.css\";\nimport jwtDecode from 'jwt-decode';\nimport { MDBBtn } from \"mdbreact\";\nimport data from './example.json';\n\nconst Marker1 = props => {\n  const title = props.title,\n        price = props.price,\n        description = props.description,\n        time = props.time;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      border: \"5px solid white\",\n      borderRadius: 20,\n      height: 20,\n      width: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), props.show && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(MDBCard, {\n    className: \"card-body\",\n    style: {\n      width: \"22rem\",\n      marginTop: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(MDBCardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, title), React.createElement(MDBCardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, description), React.createElement(\"div\", {\n    className: \"flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, price), React.createElement(\"p\", {\n    style: {\n      marginLeft: \"1.25rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, time))))));\n};\n\nexport class UserPage extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      nom: '',\n      prenom: '',\n      latMe: '',\n      lonMe: '',\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {},\n      //Shows the infoWindow to the selected place upon a marker\n      stores: [{\n        lat: 47.49855629475769,\n        lng: -122.14184416996333\n      }, {\n        latitude: 47.359423,\n        longitude: -122.021071\n      }, {\n        latitude: 47.2052192687988,\n        longitude: -121.988426208496\n      }, {\n        latitude: 47.6307081,\n        longitude: -122.1434325\n      }, {\n        latitude: 47.3084488,\n        longitude: -122.2140121\n      }, {\n        latitude: 47.5524695,\n        longitude: -122.0425407\n      }]\n    };\n    this.logout = this.logout.bind(this);\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onClose = this.onClose.bind(this);\n  }\n\n  logout(e) {\n    e.preventDefault();\n    localStorage.removeItem('token');\n    this.props.history.push('/');\n  }\n\n  componentDidMount() {\n    const tokken = localStorage.token;\n    const decode = jwtDecode(tokken);\n    fetch(\"http://localhost:4000/annonce/getJob\").then(response => response.json()).then(res => {\n      console.log(res.data);\n      let res1 = JSON.stringify(res);\n      console.log(res1);\n    });\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(location => {\n        this.setState({\n          latMe: location.coords.latitude,\n          lonMe: location.coords.longitude\n        });\n      });\n    }\n\n    this.setState({\n      prenom: decode.prenom,\n      nom: decode.nom\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"viewport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Bienvenue \", this.state.nom))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      style: {\n        color: \"white\"\n      },\n      type: \"button\",\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \" Compte\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      style: {\n        color: \"white\"\n      },\n      type: \"button\",\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \" Contrat\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      style: {\n        color: \"white\"\n      },\n      type: \"button\",\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \" travaux effectu\\xE9\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      style: {\n        color: \"white\"\n      },\n      type: \"button\",\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \" Param\\xE8tre\"), React.createElement(MDBBtn, {\n      style: {\n        color: \"white\"\n      },\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Logout\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Map, {\n      google: this.props.google,\n      zoom: 14,\n      initialCenter: {\n        lat: 48.8322,\n        lng: 2.3561\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      title: 'My position.',\n      name: 'Me',\n      onClick: this.onMarkerClick,\n      position: {\n        lat: this.state.latMe,\n        lng: this.state.lonMe\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), this.displayMarkers(), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.selectedPlace.name))))))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDW41KMRzwFp4m7Uht_53PiPHv0LSqXq5Y'\n})(UserPage);","map":{"version":3,"sources":["/Users/chirab/Desktop/EIP_JoBizz/WebApplication/front/src/component/UserPage.js"],"names":["React","Component","useState","useRef","useEffect","Map","GoogleApiWrapper","Marker","Polygon","InfoWindow","usePosition","GoogleMapReact","MDBCard","MDBCardTitle","MDBCardText","MDBContainer","jwtDecode","MDBBtn","data","Marker1","props","title","price","description","time","border","borderRadius","height","width","show","marginTop","marginLeft","UserPage","constructor","displayMarkers","state","stores","map","store","index","lat","latitude","lng","longitude","console","log","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","nom","prenom","latMe","lonMe","logout","bind","preventDefault","localStorage","removeItem","history","push","componentDidMount","tokken","token","decode","fetch","then","response","json","res","res1","JSON","stringify","navigator","geolocation","getCurrentPosition","location","coords","render","color","google","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component, useState, useRef, useEffect } from 'react'\nimport { Map, GoogleApiWrapper, Marker, Polygon, InfoWindow } from 'google-maps-react';\nimport { usePosition } from 'use-position';\nimport GoogleMapReact from 'google-map-react';\nimport { MDBCard, MDBCardTitle, MDBCardText, MDBContainer } from \"mdbreact\";\nimport \"./Style/UserPage.css\"\nimport jwtDecode from 'jwt-decode'\nimport {MDBBtn} from \"mdbreact\"\nimport data from './example.json'\n\nconst Marker1 = (props) => {\n    const {title, price, description, time} = props;\n    return (\n        <React.Fragment>\n            <div\n                style={{\n                    border: \"5px solid white\",\n                    borderRadius: 20,\n                    height: 20,\n                    width: 20\n                }}\n            />\n            {/* Below is info window component */}\n            {props.show && (\n                <div>\n                    <MDBContainer>\n                        <MDBCard className=\"card-body\" style={{width: \"22rem\", marginTop: \"1rem\"}}>\n                            <MDBCardTitle>{title}</MDBCardTitle>\n                            <MDBCardText>\n                                {description}\n                            </MDBCardText>\n                            <div className=\"flex-row\">\n                                <p>{price}</p>\n                                <p style={{marginLeft: \"1.25rem\"}}>{time}</p>\n                            </div>\n                        </MDBCard>\n                    </MDBContainer>\n                </div>\n            )}\n        </React.Fragment>\n    )\n}\n\nexport class UserPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nom: '',\n            prenom: '',\n            latMe: '',\n            lonMe: '',\n            showingInfoWindow: false,  //Hides or the shows the infoWindow\n            activeMarker: {},          //Shows the active marker upon click\n            selectedPlace: {},         //Shows the infoWindow to the selected place upon a marker\n            stores: [{lat: 47.49855629475769, lng: -122.14184416996333},\n              {latitude: 47.359423, longitude: -122.021071},\n              {latitude: 47.2052192687988, longitude: -121.988426208496},\n              {latitude: 47.6307081, longitude: -122.1434325},\n              {latitude: 47.3084488, longitude: -122.2140121},\n              {latitude: 47.5524695, longitude: -122.0425407}]\n        };\n        this.logout = this.logout.bind(this);\n        this.onMarkerClick = this.onMarkerClick.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n\n    displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return <Marker key={index} id={index} position={{\n            lat: store.latitude,\n            lng: store.longitude\n    }}\n    onClick={() => console.log(\"You clicked me!\")} />\n   })\n }\n\n    logout(e) {\n        e.preventDefault();\n        localStorage.removeItem('token');\n        this.props.history.push('/');\n    }\n\n    componentDidMount() {\n        const tokken = localStorage.token;\n        const decode = jwtDecode(tokken);\n\n        fetch(\"http://localhost:4000/annonce/getJob\")\n        .then(response => response.json())\n            .then((res) => {\n                console.log(res.data);\n                let res1 = JSON.stringify(res);\n                console.log(res1);\n            })\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(location => {\n                this.setState({\n                    latMe: location.coords.latitude,\n                    lonMe: location.coords.longitude\n                })\n\n            });\n        }\n        this.setState({\n            prenom : decode.prenom,\n            nom : decode.nom\n        })\n    }\n\n    onMarkerClick = (props, marker, e) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"main\">\n                <div id=\"viewport\">\n                    <div id=\"sidebar\">\n                        <header>\n                            <p style={{color: \"white\"}}><strong>Bienvenue {this.state.nom}</strong></p>\n                        </header>\n                        <div>\n                            <ul style={{color: \"white\"}} type=\"button\" class=\"list-group\"> Compte</ul>\n                            <br/>\n                            <ul style={{color: \"white\"}} type=\"button\" className=\"list-group\"> Contrat</ul>\n                            <br/>\n                            <ul style={{color: \"white\"}} type=\"button\" className=\"list-group\"> travaux effectué</ul>\n                            <br/>\n                            <ul style={{color: \"white\"}} type=\"button\" className=\"list-group\"> Paramètre</ul>\n                            <MDBBtn style={{color: \"white\"}} onClick={this.logout}>Logout</MDBBtn>\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"map\">\n                            <Map\n                                google={this.props.google}\n                                zoom={14}\n\n                                initialCenter={{\n                                    lat: 48.8322,\n                                    lng: 2.3561\n                                }}\n                            >\n                                <Marker\n                                    title={'My position.'}\n                                    name={'Me'}\n                                    onClick={this.onMarkerClick}\n                                    position={{lat: this.state.latMe, lng: this.state.lonMe}} />\n                                    {this.displayMarkers()}\n                                <InfoWindow\n                                    marker={this.state.activeMarker}\n                                    visible={this.state.showingInfoWindow}\n                                    onClose={this.onClose} >\n                                    <div>\n                                        <h4>{this.state.selectedPlace.name}</h4>\n                                    </div>\n                                </InfoWindow>\n                            </Map>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDW41KMRzwFp4m7Uht_53PiPHv0LSqXq5Y'\n})(UserPage);\n"]},"metadata":{},"sourceType":"module"}