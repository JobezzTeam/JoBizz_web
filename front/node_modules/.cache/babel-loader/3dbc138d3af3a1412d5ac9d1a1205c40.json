{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"/Users/chirab/Desktop/EIP_JoBizz/JoBezzWepApp/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nlet _require = require('react'),\n    useState = _require.useState,\n    useEffect = _require.useEffect;\n\nlet _throttle = require('lodash.throttle');\n\nlet supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function () {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nlet getPosition = () => ({\n  x: window.pageXOffset,\n  y: window.pageYOffset\n});\n\nlet defaultOptions = {\n  throttle: 100\n};\n\nfunction useWindowScrollPosition(options) {\n  let opts = Object.assign({}, defaultOptions, options);\n\n  let _useState = useState(getPosition()),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  useEffect(() => {\n    let handleScroll = _throttle(() => {\n      setPosition(getPosition());\n    }, opts.throttle);\n\n    window.addEventListener('scroll', handleScroll, supportsPassive ? {\n      passive: true\n    } : false);\n    return () => {\n      handleScroll.cancel();\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return position;\n}\n\nmodule.exports = useWindowScrollPosition;","map":null,"metadata":{},"sourceType":"script"}