{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport format from \"date-fns/format\";\nimport { prefix, getUnhandledProps, defaultProps } from '../utils';\nimport IntlContext from '../IntlProvider/IntlContext';\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(Header, _React$PureComponent);\n\n  function Header() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.addPrefix = function (name) {\n      return prefix(_this.props.classPrefix)(name);\n    };\n\n    return _this;\n  }\n\n  var _proto = Header.prototype;\n\n  _proto.getTimeFormat = function getTimeFormat() {\n    var format = this.props.format;\n    var timeFormat = [];\n\n    if (!format) {\n      return '';\n    }\n\n    if (/(H|h)/.test(format)) {\n      timeFormat.push('HH');\n    }\n\n    if (/m/.test(format)) {\n      timeFormat.push('mm');\n    }\n\n    if (/s/.test(format)) {\n      timeFormat.push('ss');\n    }\n\n    return timeFormat.join(':');\n  };\n\n  _proto.getDateFormat = function getDateFormat() {\n    var _this$props = this.props,\n        showDate = _this$props.showDate,\n        showMonth = _this$props.showMonth;\n\n    var _ref = this.context || {},\n        formattedDayPattern = _ref.formattedDayPattern,\n        formattedMonthPattern = _ref.formattedMonthPattern;\n\n    if (showDate) {\n      return formattedDayPattern || 'YYYY-MM-DD';\n    } else if (showMonth) {\n      return formattedMonthPattern || 'YYYY-MM';\n    }\n\n    return 'YYYY';\n  };\n\n  _proto.renderTitle = function renderTitle() {\n    var _this$props2 = this.props,\n        date = _this$props2.date,\n        renderTitle = _this$props2.renderTitle;\n\n    if (renderTitle) {\n      return renderTitle(date);\n    }\n\n    return date && format(date, this.getDateFormat());\n  };\n\n  _proto.render = function render() {\n    var _classNames, _classNames2, _classNames3, _classNames4, _classNames5;\n\n    var _this$props3 = this.props,\n        date = _this$props3.date,\n        onMoveForword = _this$props3.onMoveForword,\n        onMoveBackward = _this$props3.onMoveBackward,\n        onToggleMonthDropdown = _this$props3.onToggleMonthDropdown,\n        onToggleTimeDropdown = _this$props3.onToggleTimeDropdown,\n        showTime = _this$props3.showTime,\n        showDate = _this$props3.showDate,\n        showMonth = _this$props3.showMonth,\n        classPrefix = _this$props3.classPrefix,\n        className = _this$props3.className,\n        disabledDate = _this$props3.disabledDate,\n        disabledTime = _this$props3.disabledTime,\n        disabledBackward = _this$props3.disabledBackward,\n        disabledForword = _this$props3.disabledForword,\n        renderToolbar = _this$props3.renderToolbar,\n        rest = _objectWithoutPropertiesLoose(_this$props3, [\"date\", \"onMoveForword\", \"onMoveBackward\", \"onToggleMonthDropdown\", \"onToggleTimeDropdown\", \"showTime\", \"showDate\", \"showMonth\", \"classPrefix\", \"className\", \"disabledDate\", \"disabledTime\", \"disabledBackward\", \"disabledForword\", \"renderToolbar\"]);\n\n    var dateTitleClasses = classNames(this.addPrefix('title'), this.addPrefix('title-date'), (_classNames = {}, _classNames[this.addPrefix('error')] = disabledDate === null || disabledDate === void 0 ? void 0 : disabledDate(date), _classNames));\n    var timeTitleClasses = classNames(this.addPrefix('title'), this.addPrefix('title-time'), (_classNames2 = {}, _classNames2[this.addPrefix('error')] = disabledTime === null || disabledTime === void 0 ? void 0 : disabledTime(date), _classNames2));\n    var backwardClass = classNames(this.addPrefix('backward'), (_classNames3 = {}, _classNames3[this.addPrefix('btn-disabled')] = disabledBackward, _classNames3));\n    var forwardClass = classNames(this.addPrefix('forward'), (_classNames4 = {}, _classNames4[this.addPrefix('btn-disabled')] = disabledForword, _classNames4));\n    var monthToolbar = React.createElement(\"div\", {\n      className: this.addPrefix('month-toolbar')\n    }, React.createElement(\"i\", {\n      className: backwardClass,\n      role: \"button\",\n      tabIndex: -1,\n      onClick: disabledBackward ? undefined : onMoveBackward\n    }), React.createElement(\"span\", {\n      role: \"button\",\n      tabIndex: -1,\n      className: dateTitleClasses,\n      onClick: onToggleMonthDropdown\n    }, this.renderTitle()), React.createElement(\"i\", {\n      className: forwardClass,\n      role: \"button\",\n      tabIndex: -1,\n      onClick: disabledForword ? undefined : onMoveForword\n    }));\n    var hasMonth = showDate || showMonth;\n    var classes = classNames(classPrefix, className, (_classNames5 = {}, _classNames5[this.addPrefix('has-month')] = hasMonth, _classNames5[this.addPrefix('has-time')] = showTime, _classNames5));\n    var unhandled = getUnhandledProps(Header, rest);\n    return React.createElement(\"div\", _extends({}, unhandled, {\n      className: classes\n    }), hasMonth && monthToolbar, showTime && React.createElement(\"div\", {\n      className: this.addPrefix('time-toolbar')\n    }, React.createElement(\"span\", {\n      role: \"button\",\n      tabIndex: -1,\n      className: timeTitleClasses,\n      onClick: onToggleTimeDropdown\n    }, date && format(date, this.getTimeFormat()))), renderToolbar === null || renderToolbar === void 0 ? void 0 : renderToolbar(date));\n  };\n\n  return Header;\n}(React.PureComponent);\n\nHeader.contextType = IntlContext;\nHeader.propTypes = {\n  date: PropTypes.instanceOf(Date),\n  onMoveForword: PropTypes.func,\n  onMoveBackward: PropTypes.func,\n  onToggleMonthDropdown: PropTypes.func,\n  onToggleTimeDropdown: PropTypes.func,\n  showMonth: PropTypes.bool,\n  showDate: PropTypes.bool,\n  showTime: PropTypes.bool,\n  format: PropTypes.string,\n  disabledDate: PropTypes.func,\n  disabledTime: PropTypes.func,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  disabledBackward: PropTypes.bool,\n  disabledForword: PropTypes.bool,\n  renderTitle: PropTypes.func,\n  renderToolbar: PropTypes.func\n};\nHeader.defaultProps = {\n  date: new Date()\n};\nvar enhance = defaultProps({\n  classPrefix: 'calendar-header'\n});\nexport default enhance(Header);","map":null,"metadata":{},"sourceType":"module"}