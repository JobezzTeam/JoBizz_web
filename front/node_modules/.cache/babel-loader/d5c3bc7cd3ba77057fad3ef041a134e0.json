{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport OverlayTrigger from 'rsuite-utils/lib/Overlay/OverlayTrigger';\nimport { createChainedFunction, placementPolyfill } from '../utils';\nimport IntlContext from '../IntlProvider/IntlContext';\n\nvar Whisper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Whisper, _React$Component);\n\n  function Whisper() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Whisper.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        triggerRef = _this$props.triggerRef,\n        onOpen = _this$props.onOpen,\n        onClose = _this$props.onClose,\n        onEntered = _this$props.onEntered,\n        onExited = _this$props.onExited,\n        _this$props$placement = _this$props.placement,\n        placement = _this$props$placement === void 0 ? 'right' : _this$props$placement,\n        preventOverflow = _this$props.preventOverflow,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"triggerRef\", \"onOpen\", \"onClose\", \"onEntered\", \"onExited\", \"placement\", \"preventOverflow\"]);\n\n    return React.createElement(IntlContext.Consumer, null, function (context) {\n      return React.createElement(OverlayTrigger, _extends({\n        preventOverflow: preventOverflow,\n        placement: placementPolyfill(placement, context === null || context === void 0 ? void 0 : context.rtl),\n        onEntered: createChainedFunction(onOpen, onEntered),\n        onExited: createChainedFunction(onClose, onExited),\n        ref: triggerRef // for test\n\n      }, rest));\n    });\n  };\n\n  return Whisper;\n}(React.Component);\n\nWhisper.propTypes = {\n  triggerRef: PropTypes.func,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  onEntered: PropTypes.func,\n  onExited: PropTypes.func,\n  placement: PropTypes.string,\n\n  /**\n   * Prevent floating element overflow\n   */\n  preventOverflow: PropTypes.bool\n};\nexport default Whisper;","map":null,"metadata":{},"sourceType":"module"}