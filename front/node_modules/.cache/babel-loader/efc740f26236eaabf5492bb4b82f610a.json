{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport { withStyleProps, defaultProps, prefix } from '../utils';\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ModalDialog, _React$Component);\n\n  function ModalDialog() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        style = _this$props.style,\n        children = _this$props.children,\n        dialogClassName = _this$props.dialogClassName,\n        dialogStyle = _this$props.dialogStyle,\n        classPrefix = _this$props.classPrefix,\n        className = _this$props.className,\n        dialogRef = _this$props.dialogRef,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"style\", \"children\", \"dialogClassName\", \"dialogStyle\", \"classPrefix\", \"className\", \"dialogRef\"]);\n\n    var modalStyle = _extends({\n      display: 'block'\n    }, style);\n\n    var addPrefix = prefix(classPrefix);\n    var dialogClasses = classNames(addPrefix('dialog'), dialogClassName);\n    return React.createElement(\"div\", _extends({}, props, {\n      title: null,\n      role: \"dialog\",\n      ref: dialogRef,\n      className: classNames(classPrefix, className),\n      style: modalStyle\n    }), React.createElement(\"div\", {\n      className: dialogClasses,\n      style: dialogStyle\n    }, React.createElement(\"div\", {\n      className: addPrefix('content'),\n      role: \"document\"\n    }, children)));\n  };\n\n  return ModalDialog;\n}(React.Component);\n\nModalDialog.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  dialogClassName: PropTypes.string,\n  style: PropTypes.object,\n  dialogStyle: PropTypes.object,\n  children: PropTypes.node,\n  dialogRef: PropTypes.object\n};\nexport default compose(withStyleProps({\n  hasSize: true\n}), defaultProps({\n  classPrefix: 'modal'\n}))(ModalDialog);","map":null,"metadata":{},"sourceType":"module"}